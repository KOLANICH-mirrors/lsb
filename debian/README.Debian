lsb for Debian
--------------

This package provides the Linux Standard Base on Debian systems.  The
LSB is a specification for allowing the same binary package to be used
on multiple distributions.

The "lsb" package depends on a number of other Debian packages that
are required for full LSB compliance.  It also includes some
subroutines that are used by some LSB-compliant applications when they
are being installed or removed.

INSTALLING LSB PACKAGES

The "alien" package supports LSB packages on Debian.  For example, to
install an LSB package "lsb-mozilla-1.2-1_i386.rpm", type (as root):

alien -i lsb-mozilla-1.2-1_i386.rpm

Ideally, the package should be converted to a Debian package and then
installed by dpkg.  If this fails, there may be a problem with either
the lsb package (most likely) or alien (less likely), and you should
contact the vendor of the lsb package to resolve the problem.

IMPLEMENTATION ISSUES

This package attempts to implement the core LSB specification.  Much
of the implementation is drawn on a talk by Wichert Akkerman
(http://www.liacs.nl/~wichert/talks/LSBDistro/html/) and Matt
Taggart's discussion of LSB 1.0 and Debian.  Matt's discussion is
provided in the /usr/share/doc/lsb/html directory.

It does so in a number of ways:

- Depending upon packages that implement OS services required by the
  LSB, including libraries and programs.

- Including the ld-lsb.so.1 symlink to the dynamic linker.

- Providing the LSB init script functionality.  Some of the LSB init
  functionality cannot be implemented without cooperation from other
  packages or changes in policy for woody+1; however, the remainder is
  provided here.

The intent of this package is to provide a best current practice way
of installing LSB packages on Debian using the Intel and PowerPC
32-bit architectures with the Linux kernel ("ia32" and "ppc32").  Its
presence does not imply that I or the Debian project believe that
Debian fully complies with the Linux Standard Base, and should not be
construed as a statement that Debian is LSB-compliant.

The specification is available at http://www.linuxbase.org/spec/

DEVIATIONS FROM LSB 1.2

The package and its dependencies implement all of LSB on Debian, with
these exceptions:

- LSB 1.2 assumes a 2.4 kernel.  Debian ships a 2.2 kernel by default
  as of woody, although 2.4 is optional.  There is no way in the
  Debian system to ensure a package is only installed on a specific
  kernel release.  Running LSB applications on 2.2 kernels may result
  in subtle bugs or failures, particularly if they depend on large
  file support or new syscall interfaces introduced in Linux 2.3+.

  (We do not consider this a bug in the package.)

- LSB 1.2 doesn't fully specify what the init_functions should do.  I
  have chosen to implement them in a way that is consistent with
  Debian current practice, using the start-stop-daemon utility and the
  echo command.  For woody+1, I expect a nicer init logging facility
  that could be used.

- LSB specifies no way for a binary to request that a pid file be
  created for it, and the spec is ambiguous about whether start_daemon
  should create the pid file, therefore I assume the binary will
  produce its own /var/run/basename.pid file.

- Debian only implements certain features of adduser if shadow
  passwords are enabled.  The lsb package will prompt the user to
  enable shadow passwords if they appear to be disabled; however, it
  does not force this choice on the administrator.  Administrators who
  disable shadow passwords may find that some LSB applications fail to
  operate correctly as a result.

  (We do not consider this a bug in the package.)

- The LSB specifies that several X libraries must be available on the
  system, but does not specify the presence of either an X server or
  any X clients.  However, many LSB packages may expect these things
  to be present, despite their absence from the spec.

  (This may be a deficiency in the spec.  However, we comply as-written.)

- The LSB specifies that cron scripts can be placed in cron.daily and
  other directories; however, Debian's run-parts appears to ignore
  these scripts if they contain a dot in their names.  (See #118646)
  Once this deficiency is fixed, a versioned dependency will be added
  to this package.

  (This appears to be a deficiency in debianutils.)

- The results of running the LSB test suite against Debian with the
  LSB package and its dependencies installed are available at
  http://people.debian.org/~joeyh/lsbtest/current/, courtesy of Joey Hess.

There may be other deviations from the spec; they are bugs in this
package and should be reported as such using Debian's bug tracking
system: see reportbug(1) or your favorite bug reporting tool.  (The
aforementioned deviations are generally bugs in the package that
cannot be easily fixed, or are bugs in the specification itself that
we hope to resolve in the near future.)

For more discussion of these deviations, see:

http://lists.debian.org/lsb-spec/2001/lsb-spec-200107/msg00002.html
  (a discussion of deficiencies in LSB 1.0, mostly resolved)

DESIGN DECISIONS

- I implemented the LSB init dependencies based on Debian policy's
  update-rc.d support.  A registry of package-provided facilities and
  their start and stop priorities is retained in
  /var/lib/lsb/facilities.  Priorities are assigned to the system
  facilities as found on my sid systems as of today; perhaps system
  facilities should be registered by the appropriate packages, and not
  managed by the lsb package, but that is a woody+1 policy decision.

- The facility handling scripts are written in Python.  I am not
  particularly attached to them being written in Python, but at the
  same time I do not forsee rewriting them in $language_of_choice.

COMPLIANCE TESTING

I have been unable to locate any LSB package that tests the init
script functionality of the spec.  I am therefore unable to say
whether this package actually works as advertised.  I would appreciate
any reports of its success or failure.

 -- Chris Lawrence <lawrencc@debian.org>, Sun, 17 Feb 2002 14:07:32 -0600
